{"ast":null,"code":"var _jsxFileName = \"/home/walker/mdb/src/Components/grid.js\";\nimport React, { Component } from \"react\";\nimport { MDBContainer, MDBBox, MDBCol, MDBRow, MDBIcon } from \"mdbreact\";\nconst gridcode = {\n  position: \"absolute\",\n  width: \"100vw\",\n  top: \"57%\",\n  backgroundColor: \"black\"\n};\nconst columncss = {\n  padding: \"0px\",\n  boxSizing: \"border-box\",\n  border: \"2px solid white\",\n  zIndex: \"900\",\n  backgroundColor: \"white\",\n  margin: \"10px\",\n  position: \"relative\",\n  height: \"210px\"\n};\nconst imagesizer = {\n  position: \"absolute\",\n  width: \"100%\",\n  height: \"70%\"\n};\nconst captionblock = {\n  fontSize: \"15px\",\n  position: \"absolute\",\n  bottom: \"3%\"\n};\n\nclass GridBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      isLOading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"https://type.fit/api/quotes\").then(response => response.json()).then(data => this.setState({\n      images: data.images,\n      isLOading: false\n    }));\n  }\n\n  render() {\n    const images = this.state.images;\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      fluid: true,\n      style: gridcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      center: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      size: \"10\",\n      style: columncss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, images.map(image => /*#__PURE__*/React.createElement(\"li\", {\n      key: image.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, image.text))), /*#__PURE__*/React.createElement(MDBBox, {\n      style: captionblock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \" The text caption should be here right below the image\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: \"-5%\",\n        width: \"100%\",\n        fontSize: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      style: {\n        color: \"red\",\n        margin: \"8px\",\n        fontSize: \"16px\"\n      },\n      icon: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MDBIcon, {\n      style: {\n        color: \"blue\",\n        margin: \"8px\",\n        fontSize: \"20px\"\n      },\n      far: true,\n      icon: \"thumbs-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(MDBIcon, {\n      style: {\n        color: \"orange\",\n        margin: \"8px\",\n        fontSize: \"20px\"\n      },\n      icon: \"share-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }\n    })))));\n  }\n\n}\n\nexport default GridBlock;","map":{"version":3,"sources":["/home/walker/mdb/src/Components/grid.js"],"names":["React","Component","MDBContainer","MDBBox","MDBCol","MDBRow","MDBIcon","gridcode","position","width","top","backgroundColor","columncss","padding","boxSizing","border","zIndex","margin","height","imagesizer","captionblock","fontSize","bottom","GridBlock","constructor","props","state","images","isLOading","componentDidMount","setState","isLoading","fetch","then","response","json","data","render","map","image","author","text","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {MDBContainer,MDBBox, MDBCol,MDBRow,MDBIcon} from \"mdbreact\";\n\n\nconst gridcode ={\n    position:\"absolute\",\n    width:\"100vw\",\n    top:\"57%\",\n    backgroundColor:\"black\",\n\n}\nconst columncss ={\n    padding:\"0px\",\n    boxSizing:\"border-box\",\n    border: \"2px solid white\",\n    zIndex:\"900\",\n    backgroundColor:\"white\",\n    margin:\"10px\",\n    position:\"relative\",\n    height:\"210px\",\n\n}\nconst imagesizer ={\n    position:\"absolute\",\n    width:\"100%\",\n    height:\"70%\"\n}\nconst captionblock = {\n    fontSize:\"15px\",\n    position:\"absolute\",\n    bottom: \"3%\"\n}\n\nclass GridBlock extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            images:[],\n            isLOading: false,\n        };\n\n    }\n\n    componentDidMount(){\n        this.setState({ isLoading: true });\n        fetch(\"https://type.fit/api/quotes\")\n        .then(response =>response.json())\n        .then(data =>this.setState({images: data.images, isLOading:false}));\n    }\n   \n   \n    render(){\n        const {images} = this.state;\n        return(\n            <MDBContainer fluid style={gridcode}>\n                <MDBRow center>\n                    <MDBCol size=\"10\" style={columncss}> \n                    {/* <img style={imagesizer} src={\"https://images.unsplash.com/photo-1594954825820-e9ebfd9d0e21?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"} alt=\"not visible\" /> <br></br> */}\n                    <ul>\n                            {\n                            images.map(image=>\n                                <li key={image.author}>\n                                    {image.text}\n\n                                </li>\n                                )}\n                    </ul>\n                    <MDBBox style={captionblock}>\n                        <p> The text caption should be here right below the image \n                        </p>  \n                        </MDBBox>\n                    \n                    <div style={{position:\"absolute\", bottom:\"-5%\", width:\"100%\",fontSize:\"40px\"}}>\n                        <MDBIcon style={{color:\"red\",margin:\"8px\",fontSize:\"16px\"}}  icon=\"heart\" />  \n                         <MDBIcon style={{color:\"blue\",margin:\"8px\", fontSize:\"20px\"}}  far icon=\"thumbs-up\" />\n                         <MDBIcon style={{color:\"orange\",margin:\"8px\", fontSize:\"20px\"}}  icon=\"share-alt\" />\n                    </div>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\nexport  default GridBlock;\n"]},"metadata":{},"sourceType":"module"}